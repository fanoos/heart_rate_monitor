package STM32;
import com.google.auth.oauth2.GoogleCredentials;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.concurrent.CountDownLatch;

public class MyFirebase {
	
	private static final String DATABASE_URL = "https://doc-hero.firebaseio.com";
	private FirebaseDatabase firebaseDatabase;

	public MyFirebase() throws FileNotFoundException {
	
		FileInputStream serviceAccount = new FileInputStream("./ServiceAccountKey_DocHero.json");
		try {
			FirebaseOptions options = new FirebaseOptions.Builder()
					.setCredentials(GoogleCredentials.fromStream(serviceAccount)).setDatabaseUrl(DATABASE_URL).build();
			FirebaseApp.initializeApp(options);
			firebaseDatabase = FirebaseDatabase.getInstance(DATABASE_URL);
			
		} catch (IOException ioe) {
			System.out.println(ioe.getMessage());
		}
	}

	public void update_set(Object value, String key) {
		try {
			DatabaseReference ref = firebaseDatabase.getReference(key);
			final CountDownLatch latch = new CountDownLatch(1);
			ref.setValue(value, new DatabaseReference.CompletionListener() {
				// @Override
				public void onComplete(DatabaseError databaseError, DatabaseReference databaseReference) {
					if (databaseError != null) {
						System.out.println("Data could not be saved " + databaseError.getMessage());
						latch.countDown();
					} else {
						System.out.println("Data saved successfully.");
						latch.countDown();
					}
				}
			});
			latch.await();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public void update_push(Object value, String key) {
		try {
			DatabaseReference ref = firebaseDatabase.getReference(key);
			// Generate a reference to a new location and add some data using
			DatabaseReference pushedPostRef = ref.push();
			// Get the unique ID generated by a push()
			String postId = pushedPostRef.getKey();

			final CountDownLatch latch = new CountDownLatch(1);
			pushedPostRef.setValue(value, new DatabaseReference.CompletionListener() {
				// @Override
				public void onComplete(DatabaseError databaseError, DatabaseReference databaseReference) {
					if (databaseError != null) {
						System.out.println("Data could not be saved " + databaseError.getMessage());
						latch.countDown();
					} else {
						System.out.println("Data saved successfully.");
						latch.countDown();
					}
				}
			});
			latch.await();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public void close() {
		firebaseDatabase.getApp().delete();
	}
}